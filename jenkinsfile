pipeline {
    agent none
    stages {
        stage('Checkout SCM') {
            steps {
                git branch: 'main', credentialsId: 'your-git-credentials-id', url: 'https://github.com/your-username/your-repo.git'
            }
        }
        stage('Build & Test (Multi-Stage Docker)') {
            agent {
                docker {
                    image 'openjdk:17-slim' // Lightweight base image for building
                    args '-v $(pwd):/app' // Mount current directory as /app
                }
            }
            steps {
                sh 'mvn clean package' // Or 'gradle clean build' depending on build tool
                // Unit tests (replace with your actual commands)
                sh 'mvn test' // Or 'gradle test'
            }
        }
        stage('Publish Docker Image') {
            steps {
                script {
                    // Docker login if needed for private registry
                    docker.withRegistry('https://hub.docker.com/repositories/balaakash', 'docker-cred') {
                        def imageName = "acers:latest"
                        def dockerfile = 'Dockerfile'

                        // Build the Docker image using multi-stage build
                        def app = docker.build(imageName, "-f ${dockerfile} .")
                        // Push the image to a Docker registry
                        app.push('latest')
                    }
                }
            }
        }
    }
}
